/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/alerts_screen_screen/alerts_screenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

alerts_screenViewBase::alerts_screenViewBase() :
    flexButtonCallback(this, &alerts_screenViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    bg.setPosition(0, 0, 480, 272);
    bg.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(bg);

    close_icon.setBitmap(touchgfx::Bitmap(BITMAP_CLOSE_ICON_ID));
    close_icon.setPosition(395, 5, 80, 80);
    close_icon.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(close_icon);

    close_btn.setBoxWithBorderPosition(0, 0, 80, 81);
    close_btn.setBorderSize(5);
    close_btn.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    close_btn.setAlpha(0);
    close_btn.setAction(flexButtonCallback);
    close_btn.setPosition(395, 4, 80, 81);
    add(close_btn);

    header_bar.setPosition(0, 0, 395, 58);
    header_barPainter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    header_bar.setPainter(header_barPainter);
    header_bar.setStart(10, 40);
    header_bar.setEnd(385, 40);
    header_bar.setLineWidth(1);
    header_bar.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(header_bar);

    header.setXY(16, 15);
    header.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    header.setLinespacing(0);
    header.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E1BR));
    add(header);

    alert_text.setXY(16, 46);
    alert_text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    alert_text.setLinespacing(0);
    alert_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GWRZ));
    add(alert_text);
}

alerts_screenViewBase::~alerts_screenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void alerts_screenViewBase::setupScreen()
{

}

void alerts_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &close_btn)
    {
        //go_home
        //When close_btn clicked change screen to home_screen
        //Go to home_screen with screen transition towards North
        application().gotohome_screenScreenSlideTransitionNorth();
    }
}
